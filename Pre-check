from bs4 import BeautifulSoup
import openpyxl
import numpy
import pandas as pd
import requests
import re

df = pd.DataFrame()

def pegar_info(link):
    def pre_requisitar(link,materia,sigla_faculdade):
        global df
        html_text_pre = requests.get(link).text
        soup_pre = BeautifulSoup(html_text_pre, 'lxml')
        lista_pre = soup_pre.find('ul', class_="prerequisitos")
        if lista_pre:
            combinacao = re.compile('até 2023:,(.*)')
            if len(combinacao.findall(lista_pre.text.strip().replace("*", r" ").replace("  ", r",").replace("/ ", r","))) > 0:
                pre_requisitos = str(combinacao.findall(lista_pre.text.strip().replace("*", r" ").replace("  ", r",").replace("/ ", r","))[0]).split("/ ")
                dados_pre_requisitos = [i.split(',') for i in pre_requisitos]
                pre_requisitos = pd.DataFrame(data={materia: [sigla_faculdade,dados_pre_requisitos]})
                df = pd.concat([df,pre_requisitos], axis=1)
            else:
                df = pd.concat([df,pd.DataFrame(data={materia:[sigla_faculdade,]})],axis=1)
        else:
            df = pd.concat([df, pd.DataFrame(data={materia: [sigla_faculdade,]})], axis=1)
        return


    html_text = requests.get(link).text
    soup = BeautifulSoup(html_text, 'lxml')
    faculdades = soup.find_all('div', class_ = 'col-sm-4 item')
    for faculdade in faculdades:
        sigla_faculdade = faculdade.find('span', class_ = 'label label-default').text.strip()
        nome_faculdade = faculdade.find("span", text=re.compile(sigla_faculdade)).next_sibling.text.strip()
        link_materias = faculdade.find('a', href=True)
        site_materias = requests.get(link_materias['href']).text
        sopa = BeautifulSoup(site_materias, 'lxml')
        materias = sopa.find_all('div', class_='col-sm-4 disciplina')
        for materia in materias:
            sigla_materia = materia.find('span', class_='label label-default').text
            nome_materia = materia.find("span", text=re.compile(sigla_materia)).next_sibling.text.strip()
            link_mat = materia.find('a', href=True)
            pre_requisitar(link_mat['href'],sigla_materia,sigla_faculdade)

pegar_info("https://www.dac.unicamp.br/portal/caderno-de-horarios/2023/1/S/G")
df.to_excel(r'Local do arquivo \pré_requisitos.xlsx', index=False)